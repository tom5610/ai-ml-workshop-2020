# This basic CloudFormation template is used in temporary EventEngine accounts... The permissions are probably
# more generous than you'd want to grant in a production account!
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  SageMakerIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess"
        - "arn:aws:iam::aws:policy/IAMFullAccess"
        - "arn:aws:iam::aws:policy/AWSLambdaFullAccess"

  # SageMaker notebook
  NotebookConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties:
      NotebookInstanceLifecycleConfigName: !Sub '${AWS::StackName}-LifecycleConfig'
      OnStart:
        - Content:
            Fn::Base64: !Sub |
              #!/bin/bash
              set -e

              # Install extension for ipywidgets interactivity:
              sudo -u ec2-user -i <<'EOF'
              source /home/ec2-user/anaconda3/bin/activate JupyterSystemEnv
              jupyter labextension install @jupyter-widgets/jupyterlab-manager
              source /home/ec2-user/anaconda3/bin/deactivate
              EOF

  NotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      InstanceType: ml.t2.medium
      LifecycleConfigName: !GetAtt NotebookConfig.NotebookInstanceLifecycleConfigName
      # Otherwise it gets some garbage name by default:
      NotebookInstanceName: !Sub '${AWS::StackName}-Notebook'
      RoleArn: !GetAtt SageMakerIamRole.Arn
      VolumeSizeInGB: 20
      DefaultCodeRepository: https://github.com/tom5610/ai-ml-workshop-2020.git
